(()=>{"use strict";new class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,o,s){RegisterCommand(e,((e,s,i)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||o(e,s,i)}),s)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this.createdVehicles=[],this.registerCommands()}findTargetPlayer(e){let t;return global.exports.armoury.getPlayers().forEach((o=>{global.exports.authentication.getPlayerInfo(o,"name").toLowerCase()===e.toLowerCase()&&(t=o)})),t}checkTargetAvailability(e){return!!e||(console.log("No player found with specified name."),!1)}registerCommands(){RegisterCommand("veh",((e,t,o)=>{if(!t[0])return void console.log("ERROR! You should use /veh <vehiclename> <color>");let s=t[0].toString(),i=GetEntityCoords(GetPlayerPed(e));const l=CreateVehicle(s,i[0],i[1],i[2],0,!0,!0);TaskWarpPedIntoVehicle(GetPlayerPed(e),l,-1),SetVehicleCustomPrimaryColour(l,255,255,255),SetVehicleCustomSecondaryColour(l,255,255,255),this.createdVehicles.push(l)}),!1),RegisterCommand("destroyvehicles",((e,t,o)=>{this.createdVehicles.forEach((e=>{DoesEntityExist(e)&&DeleteEntity(e)})),this.createdVehicles=[]}),!1),RegisterCommand("gotoveh",((e,t)=>{if(!t.length)return;const o=GetEntityCoords(Number(t[0]));SetEntityCoords(GetPlayerPed(e),o[0],o[1],o[2],!0,!1,!1,!0)}),!1),RegisterCommand("getveh",((e,t)=>{if(!t.length)return;const o=GetEntityCoords(GetPlayerPed(e));SetEntityCoords(Number(t[0]),o[0],o[1]+1,o[2]+1,!0,!1,!1,!0)}),!1),RegisterCommand("stats",(e=>{console.log("Routing bucket:",GetEntityRoutingBucket(GetPlayerPed(e)))}),!1),this.RegisterAdminCommand("goto",1,((e,t)=>{if(!t.length)return void console.log("ERROR! You should use /goto <player-name>");let o;const s=this.findTargetPlayer(t[0]);this.checkTargetAvailability(s)&&(o=GetEntityCoords(GetPlayerPed(s),!0),SetEntityCoords(GetPlayerPed(e),o[0]+1,o[1],o[2],!0,!1,!1,!0),console.log(`Teleported to ${t[0]}.`))}),!1),this.RegisterAdminCommand("gethere",1,((e,t)=>{if(!t.length)return void console.log("ERROR! You should use /gethere <player-name>");const o=GetEntityCoords(GetPlayerPed(e),!0),s=this.findTargetPlayer(t[0]);this.checkTargetAvailability(s)&&(SetEntityCoords(GetPlayerPed(s),o[0]+1,o[1],o[2],!0,!1,!1,!0),console.log(`Teleported ${t[0]} to you.`))}),!1),this.RegisterAdminCommand("setstat",5,((e,t)=>{if(t.length<3)return console.log("ERROR! You should use /setstat <player-name> <stat> <value>"),void console.log(`Stats you can set: ${["skills"].join(", ")}`);let o=this.findTargetPlayer(t[0]);return this.checkTargetAvailability(o)?"skills"===t[1]?t[3]?Number(t[3])?(global.exports.skills.updatePlayerSkill(o,t[2],t[3]),void console.log(`Skill ${t[2]} updated successfuly for player ${t[0]} `)):void console.log(`${t[3]} is not a valid value.`):void console.log("Give a value to said skill, using /setstat <player-name> skills <skill> <value>"):void console.log(`No stat with name ${t[1]} found`):void 0}),!1),this.RegisterAdminCommand("setcash",5,((e,t)=>{if(t.length<2)return void console.log("ERROR! You should use /setcash <player-name> <value>");let o=this.findTargetPlayer(t[0]);this.checkTargetAvailability(o)&&(Number(t[1])?(exports.authentication.setPlayerInfo(o,"cash",Number(t[1]),!1),console.log(`${t[0]}'s cash was set to ${t[1]}$.`)):console.log(`${t[1]} is not a valid value`))}),!1),this.RegisterAdminCommand("givecash",6,((e,t)=>{if(t.length<2)return void console.log("ERROR! You should use /givecash <player-name> <value>");const o=this.findTargetPlayer(t[0]);if(!this.checkTargetAvailability(o))return;if(!Number(t[1]))return void console.log(`${t[1]} is not a valid value.`);const s=exports.authentication.getPlayerInfo(o,"cash");exports.authentication.setPlayerInfo(o,"cash",Number(t[1])+s,!1),console.log(`${t[0]} received ${t[1]}$.`)}),!1)}}})();