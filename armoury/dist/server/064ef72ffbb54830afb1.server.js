(()=>{"use strict";var e={147:e=>{e.exports=require("fs")}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}(()=>{const e=s(147);new class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,s,r){RegisterCommand(e,((e,r,i)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||s(e,r,i)}),r)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this._players=[],this.registerCommands(),this.registerFiveMEventListeners(),this.registerListeners(),this.registerExports(),this._players=[];for(let e=0;e<1024;e++)NetworkIsPlayerActive(e)&&this._players.push(e)}registerCommands(){RegisterCommand("pos",((t,s)=>{let r=[],i=[];0!==GetVehiclePedIsIn(GetPlayerPed(t),!0)?(r=GetEntityCoords(GetVehiclePedIsIn(GetPlayerPed(t),!1),!0),i=GetEntityRotation(GetVehiclePedIsIn(GetPlayerPed(t),!1),2)):(r=GetEntityCoords(GetPlayerPed(t),!0),i=GetEntityRotation(GetPlayerPed(t),2));const n=`${r.map((e=>Number(e.toString()).toFixed(4))).join(",")},${i.map((e=>Number(e.toString()))).join(",")}`;console.log(`Source position is ${n}`),e.appendFile("savedpositions.txt",`\n${n} ${s.slice().shift()}`,(()=>{}))}),!1)}registerListeners(){onNet(`${GetCurrentResourceName()}:open-general-menu`,(()=>{global.exports["armoury-overlay"].showContextMenu(source,{title:"General Menu",id:"general-menu",items:[{label:"GPS",active:!0},{label:"Legitimation"}]})}))}registerFiveMEventListeners(){onNet("playerJoining",((e,t)=>{this._players.push(source)})),onNet("playerDropped",(e=>{this._players=this._players.filter((e=>e!==source))}))}getPlayers(){return this._players}registerExports(){exports("getPlayers",this.getPlayers.bind(this))}}})()})();