(()=>{"use strict";var e,t;(t=e||(e={}))[t.SERVER_TO_SERVER=0]="SERVER_TO_SERVER",t[t.SERVER_TO_CLIENT=1]="SERVER_TO_CLIENT",t[t.CLIENT_TO_SERVER=2]="CLIENT_TO_SERVER",t[t.CLIENT_TO_CLIENT=3]="CLIENT_TO_CLIENT";const s=new Map,i=new Map;let n=class extends class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,s,i){RegisterCommand(e,((e,i,n)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||s(e,i,n)}),i)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this._factionInternalId="",this._spawnedVehicles=[],this._pendingVehicles=[],this._assignDefaultListeners(),this._factionInternalId=GetCurrentResourceName().split("-")[1],GetCurrentResourceName().includes("factions-")||console.error("You are using a Faction controller but its name does NOT comply with the naming 'factions-<factionInternalId>'. The resource may not work properly.")}get factionInternalId(){return this._factionInternalId}get spawnedVehicles(){return this._spawnedVehicles}get pendingVehicles(){return this._pendingVehicles}registerVehicles(e,...t){var s;const i=t.map((t=>Object.assign(Object.assign({},t),{color:e})));this._pendingVehicles=i,(null===(s=global.exports.armoury.getPlayers())||void 0===s?void 0:s.length)>0&&(this.spawnVehicles(i),console.log(`Players already online. Creating faction vehicles of faction '${this.factionInternalId}'.`))}_assignDefaultListeners(){onNet(`${GetCurrentResourceName()}:get-faction-information`,(()=>{const e=global.exports.factions.getFaction(this.factionInternalId);e&&TriggerClientEvent(`${GetCurrentResourceName()}:get-faction-information-response`,source,e)})),onNet("onResourceStop",(e=>{e===GetCurrentResourceName()&&(this.clearVehicleSpawnTimeout(),this.removeVehicles())})),onNet("authentication:player-authenticated",(()=>{var e;(null===(e=this.spawnedVehicles)||void 0===e?void 0:e.length)>0||(this.spawnVehicles(this._pendingVehicles),console.log(`A player has joined. Creating faction vehicles of faction '${this.factionInternalId}'.`))})),onNet("playerDropped",(()=>{var e;(null===(e=global.exports.armoury.getPlayers())||void 0===e?void 0:e.length)>0||(this.clearVehicleSpawnTimeout(),this.removeVehicles(),console.log(`No player left. Destroying faction vehicles of faction '${this.factionInternalId}'.`))}))}removeVehicle(e,t){DoesEntityExist(e)&&DeleteEntity(e),this._spawnedVehicles.indexOf(e)>-1&&(t||(this._spawnedVehicles.splice(this._spawnedVehicles.indexOf(e),1),this._pendingVehicles.splice(this._spawnedVehicles.indexOf(e),1)))}removeVehicles(){this._spawnedVehicles.forEach((e=>{this.removeVehicle(e,!0)})),this._spawnedVehicles=[]}spawnVehicles(e){this.vehicleSpawnTimeout=setTimeout((()=>{e.forEach((e=>{const t=CreateVehicle(e.modelHash,e.pos[0],e.pos[1],e.pos[2],0,!0,!0);this._spawnedVehicles.push(t),setTimeout((()=>{SetVehicleColours(t,e.color[0],e.color[1]),SetEntityRotation(t,e.pos[3],e.pos[4],e.pos[5],2,!0)}),5e3)})),this.vehicleSpawnTimeout=null}),2e3)}clearVehicleSpawnTimeout(){this.vehicleSpawnTimeout&&(clearTimeout(this.vehicleSpawnTimeout),this.vehicleSpawnTimeout=null)}}{constructor(){super(),this.registerVehicles([88,88],{modelHash:-956048545,pos:[416.0439453125,-644.0439453125,28.100341796875,.0559806227684021,.00011413223546696827,-90.2237319946289]},{modelHash:-956048545,pos:[416.00439453125,-649.3713989257812,28.100341796875,-.0003272554313298315,.05598462000489235,-90.66983032226562]},{modelHash:-956048545,pos:[416.00439453125,-654.7648315429688,28.100341796875,1.6675267389132387e-8,.055975910276174545,-89.9999771118164]},{modelHash:-956048545,pos:[409.29229736328125,-652.0615234375,28.100341796875,.05597567558288574,-.0001638552057556808,90.33543395996094]},{modelHash:-956048545,pos:[409.27911376953125,-646.7472534179688,28.100341796875,.05597548186779022,.00021835426741745323,89.55299377441406]},{modelHash:-956048545,pos:[409.22637939453125,-641.4461669921875,28.100341796875,-5951902858214453e-20,.05598071217536926,89.88805389404297]},{modelHash:-956048545,pos:[409.17364501953125,-635.9736328125,28.100341796875,-.0559854656457901,.00010931194992735982,90.2237319946289]},{modelHash:-956048545,pos:[393.21759033203125,-638.6505737304688,28.100341796875,.055978551506996155,-.0004949465510435402,-88.99671173095703]},{modelHash:-956048545,pos:[393.29669189453125,-644.2549438476562,28.100341796875,.05598071217536926,5951489947619848e-20,-90.1119384765625]},{modelHash:-956048545,pos:[393.3230895996094,-649.6879272460938,28.100341796875,.05598049238324165,.00016869093815330416,-90.33541870117188]},{modelHash:-956048545,pos:[393.4021911621094,-655.028564453125,28.100341796875,.000381546764401719,.05597461387515068,-89.21891021728516]},{modelHash:-956048545,pos:[393.4021911621094,-660.6329345703125,28.1171875,-.18164598941802979,-1.7901086807250977,-89.12449645996094]})}};n=function(e,t,s,i){var n,o=arguments.length,r=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,s,i);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(r=(o<3?n(r):o>3?n(t,s,r):n(t,s))||r);return o>3&&r&&Object.defineProperty(t,s,r),r}([function(t){return class extends t{constructor(...n){super(...n),s.has(t)&&s.get(t).forEach((([t,s,i])=>{i===e.CLIENT_TO_CLIENT?on(s,super[t].bind(this)):onNet(s,super[t].bind(this))})),i.has(t)&&i.get(t).forEach((e=>{exports(e,super[e].bind(this))}))}}}],n),new n})();