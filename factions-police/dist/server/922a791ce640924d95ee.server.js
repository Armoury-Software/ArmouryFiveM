(()=>{"use strict";new class extends class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,i,s){RegisterCommand(e,((e,s,n)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||i(e,s,n)}),s)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this._factionInternalId="",this._spawnedVehicles=[],this._pendingVehicles=[],this._assignDefaultListeners(),this._factionInternalId=GetCurrentResourceName().split("-")[1],GetCurrentResourceName().includes("factions-")||console.error("You are using a Faction controller but its name does NOT comply with the naming 'factions-<factionInternalId>'. The resource may not work properly.")}get factionInternalId(){return this._factionInternalId}get spawnedVehicles(){return this._spawnedVehicles}get pendingVehicles(){return this._pendingVehicles}registerVehicles(e,...t){var i;const s=t.map((t=>Object.assign(Object.assign({},t),{color:e})));this._pendingVehicles=s,(null===(i=global.exports.armoury.getPlayers())||void 0===i?void 0:i.length)>0&&(this.spawnVehicles(s),console.log(`Players already online. Creating faction vehicles of faction '${this.factionInternalId}'.`))}_assignDefaultListeners(){onNet(`${GetCurrentResourceName()}:get-faction-information`,(()=>{const e=global.exports.factions.getFaction(this.factionInternalId);e&&TriggerClientEvent(`${GetCurrentResourceName()}:get-faction-information-response`,source,e)})),onNet("onResourceStop",(e=>{e===GetCurrentResourceName()&&(this.clearVehicleSpawnTimeout(),this.removeVehicles())})),onNet("authentication:player-authenticated",(()=>{var e;(null===(e=this.spawnedVehicles)||void 0===e?void 0:e.length)>0||(this.spawnVehicles(this._pendingVehicles),console.log(`A player has joined. Creating faction vehicles of faction '${this.factionInternalId}'.`))})),onNet("playerDropped",(()=>{var e;(null===(e=global.exports.armoury.getPlayers())||void 0===e?void 0:e.length)>0||(this.clearVehicleSpawnTimeout(),this.removeVehicles(),console.log(`No player left. Destroying faction vehicles of faction '${this.factionInternalId}'.`))}))}removeVehicle(e,t){DoesEntityExist(e)&&DeleteEntity(e),this._spawnedVehicles.indexOf(e)>-1&&(t||(this._spawnedVehicles.splice(this._spawnedVehicles.indexOf(e),1),this._pendingVehicles.splice(this._spawnedVehicles.indexOf(e),1)))}removeVehicles(){this._spawnedVehicles.forEach((e=>{this.removeVehicle(e,!0)})),this._spawnedVehicles=[]}spawnVehicles(e){this.vehicleSpawnTimeout=setTimeout((()=>{e.forEach((e=>{const t=CreateVehicle(e.modelHash,e.pos[0],e.pos[1],e.pos[2],0,!0,!0);this._spawnedVehicles.push(t),setTimeout((()=>{SetVehicleColours(t,e.color[0],e.color[1]),SetEntityRotation(t,e.pos[3],e.pos[4],e.pos[5],2,!0)}),5e3)})),this.vehicleSpawnTimeout=null}),2e3)}clearVehicleSpawnTimeout(){this.vehicleSpawnTimeout&&(clearTimeout(this.vehicleSpawnTimeout),this.vehicleSpawnTimeout=null)}}{constructor(){super(),this.registerCommands()}findTargetPlayer(e){let t;return global.exports.armoury.getPlayers().forEach((i=>{global.exports.authentication.getPlayerInfo(i,"name").toLowerCase()===e.toLowerCase()&&(t=i)})),t}checkTargetAvailability(e){return!!e||(console.log("No player found with specified name."),!1)}registerCommands(){RegisterCommand("jail",((e,t)=>{if(!t.length)return void console.log("Error! Use /jail <target>.");const i=this.findTargetPlayer(t[0]);this.checkTargetAvailability(i)&&(global.exports.authentication.getPlayerInfo(i,"jailTime")?console.log("Player already in jail."):0!==global.exports.authentication.getPlayerInfo(i,"wantedLevel")?global.exports.jail.jailPlayer(i):console.log("Player doesn't have a wanted level."))}),!1)}}})();