(()=>{"use strict";const e=(e,t,r,s,o,i,a)=>e>=s-a&&e<=s+a&&t>=o-a&&t<=o+a&&r>=i-a&&r<=i+a,t=[-522.5355,-2866.82,4.00038];new class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,r,s){RegisterCommand(e,((e,s,o)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||r(e,s,o)}),s)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this.carriers=new Map,this.assignEvents()}beginRouteForPlayer(e,t){const r=GetEntityCoords(GetPlayerPed(e),!0),s=this.getPossibleDeliveryPoints(r,15),o=s[Math.floor(Math.random()*s.length)].pos;this.updatePackageUI(),TriggerClientEvent(`${GetCurrentResourceName()}:begin-route`,source,{X:o[0],Y:o[1],Z:o[2]-1},t)}updatePackageUI(e=!0){e?global.exports["armoury-overlay"].setMessage(source,{id:"carrier-packages",content:0===this.carriers.get(source)?"You have no packages left. Pick some up from the docks.":`You have ${this.carriers.get(source)}/2 packages left.`}):global.exports["armoury-overlay"].deleteMessage(source,{id:"carrier-packages"})}getPossibleDeliveryPoints(t,r){const s=global.exports.businesses.getEntities().map((e=>({pos:[e.depositX,e.depositY,e.depositZ]})));return t&&r?s.filter((s=>!e(t[0],t[1],t[2],s.pos[0],s.pos[1],s.pos[2],r))):s}assignEvents(){onNet(`${GetCurrentResourceName()}:playerDropped`,(()=>{this.carriers.has(source)&&this.carriers.delete(source)})),onNet("baseevents:leftVehicle",(()=>{this.updatePackageUI(!1)})),onNet("baseevents:enteredVehicle",(()=>{GetEntityModel(GetVehiclePedIsIn(GetPlayerPed(source),!1))===GetHashKey("Mule")&&this.updatePackageUI()})),onNet(`${GetCurrentResourceName()}:quick-start`,((e=!1)=>{this.carriers.set(source,2),this.beginRouteForPlayer(source,!e)})),onNet(`${GetCurrentResourceName()}:get-job`,(()=>{global.exports.authentication.setPlayerInfo(source,"job","carrier",!1),TriggerClientEvent("carrier-job:job-assigned",source)})),onNet(`${GetCurrentResourceName()}:route-finished`,(()=>{const t=GetEntityCoords(GetPlayerPed(source),!0);this.getPossibleDeliveryPoints().forEach((r=>{if(e(t[0],t[1],t[2],r.pos[0],r.pos[1],r.pos[2],10)&&GetEntityModel(GetVehiclePedIsIn(GetPlayerPed(source),!1))===GetHashKey("Mule"))return exports.authentication.setPlayerInfo(source,"cash",Number(exports.authentication.getPlayerInfo(source,"cash"))+(1e3+Math.floor(1e3*Math.random())),!1),global.exports.skills.incrementPlayerSkill(source,"carrier",.01),this.carriers.set(source,this.carriers.get(source)-1),void(0===this.carriers.get(source)?this.triggerPickup(source):this.beginRouteForPlayer(source,!1))}))}))}triggerPickup(e){this.updatePackageUI(),TriggerClientEvent(`${GetCurrentResourceName()}:pickup-route`,e,{X:t[0],Y:t[1],Z:t[2]})}}})();