(()=>{"use strict";var e=function(e,t,n,s){return new(n||(n=Promise))((function(i,o){function r(e){try{l(s.next(e))}catch(e){o(e)}}function a(e){try{l(s.throw(e))}catch(e){o(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,a)}l((s=s.apply(e,t||[])).next())}))};new class extends class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,n,s){RegisterCommand(e,((e,s,i)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||n(e,s,i)}),s)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(e){super(),this.dbTableName=e,this._entities=[],this.loadDBEntities(),this._assignExports(),this.assignDBEntityCommunicationListeners()}get entities(){return this._entities}getEntities(){return this._entities}createEntity(t,n){return(()=>e(this,void 0,void 0,(function*(){try{let e=this.getEntityProperties(t),s=this.getEntityPropertiesValues(t,e);n&&(e=["id",...e],s=[n.toString(),...s]);const i=yield global.exports.oxmysql.insert_async(`INSERT INTO \`${this.dbTableName}\` (${e.join(", ")}) VALUES (${Array(e.length).fill("?").join(", ")})`,s);return this._entities.push(Object.assign(Object.assign({},t),{id:n||i})),this.syncWithClients(),n||i}catch(e){return console.log(e),null}})))()}removeEntity(t){return(()=>e(this,void 0,void 0,(function*(){try{const e=yield global.exports.oxmysql.query_async(`DELETE FROM \`${this.dbTableName}\` WHERE id = ?`,[t.id]);return this._entities=this._entities.filter((e=>e.id!==t.id)),this.syncWithClients(),!!e}catch(e){return console.log(e),!1}})))()}saveDBEntityAsync(t){return(()=>e(this,void 0,void 0,(function*(){try{const e=this.getEntityByDBId(t),n=this.getEntityProperties(e),s=this.getEntityPropertiesValues(e,n),i=" = ?, ",o=yield global.exports.oxmysql.update_async(`UPDATE \`${this.dbTableName}\` SET ${n.join(i).concat(i).slice(0,-2)} WHERE id = ?`,[...s,e.id]);return o&&this.syncWithClients(),o>0}catch(e){return console.log(e),!1}})))()}getEntityByDBId(e){return this._entities.find((t=>t.id===e))}loadDBEntities(){setImmediate((()=>e(this,void 0,void 0,(function*(){const e=(yield global.exports.oxmysql.query_async(`SELECT * FROM \`${this.dbTableName}\``,[])).map((e=>(Object.keys(e).forEach((t=>{var n;e[t]=JSON.parse((n=e[t].toString(),!/^\s*$/.test(n)&&(n=(n=(n=n.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@")).replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]")).replace(/(?:^|:|,)(?:\s*\[)+/g,""),/^[\],:{}\s]*$/.test(n))?e[t]:`"${e[t]}"`),(function(e,t){return"object"==typeof t||isNaN(t)?t:Number(t)}))})),e)));(null==e?void 0:e.length)&&(this._entities=e,setTimeout((()=>{this.syncWithClients()}),2e3))}))))}getEntityProperties(e){const t=[];for(let n in e)"id"!==n&&t.push(n);return t}assignDBEntityCommunicationListeners(){onNet("authentication:player-authenticated",(e=>{this._entities.length&&this.syncWithClients(e)}))}getEntityPropertiesValues(e,t){return t.map((t=>Array.isArray(e[t])?JSON.stringify(e[t]):e[t].toString()))}syncWithClients(e){TriggerClientEvent(`${GetCurrentResourceName()}:db-send-entities`,e||-1,this.entities)}_assignExports(){exports("getEntities",this.getEntities.bind(this))}}{constructor(e){super(e),this.phones=new Map,this.activeConversations=new Map,this.registerListeners(),this.fetchOnlinePlayersPhones()}registerListeners(){onNet(`${GetCurrentResourceName()}:add-contact`,(e=>{const t=this.entities.find((e=>e.id===Number(global.exports.authentication.getPlayerInfo(source,"phone"))));t&&(t.contacts.push(e),this.saveDBEntityAsync(t.id))})),onNet(`${GetCurrentResourceName()}:request-use-phone`,(()=>{const e=[...global.exports.factions.getOnlineFactionMembers("taxi").map((e=>({name:GetPlayerName(e.onlineId),phone:global.exports.authentication.getPlayerInfo(e.onlineId,"phone").toString(),service:"taxi"})))],t=Object.assign(Object.assign({},this.entities.find((e=>e.id===Number(global.exports.authentication.getPlayerInfo(source,"phone"))))),{serviceAgents:e});TriggerClientEvent(`${GetCurrentResourceName()}:force-showui`,source,t)})),onNet(`${GetCurrentResourceName()}:request-service-call`,(e=>{e.phone?this.executeCall(source,Number(e.phone)):e.service})),onNet(`${GetCurrentResourceName()}:execute-call`,(e=>{this.executeCall(source,e)})),onNet(`${GetCurrentResourceName()}:answer-call`,(e=>{const t=Number(global.exports.authentication.getPlayerInfo(source,"phone"));this.answerCall(t,e)})),onNet(`${GetCurrentResourceName()}:refuse-call`,(e=>{const t=Number(global.exports.authentication.getPlayerInfo(source,"phone"));e||(e=Array.from(this.activeConversations.keys()).find((e=>this.activeConversations.get(e)===t))),e?this.refuseCall(t,e):this.activeConversations.has(t)&&this.hangUp(t,this.activeConversations.get(t))})),onNet("authentication:player-authenticated",((e,t)=>{let n=!isNaN(t.phone)&&t.phone>0?t.phone:0;n||(n=1e6+t.id,console.log("generated phone was",n),console.log("player:",t),global.exports.authentication.setPlayerInfo(e,"phone",n,!1),this.createEntity({id:n,contacts:[]},n)),this.phones.set(n,e)})),onNet("playerDropped",(()=>{const e=Array.from(this.phones.keys()).find((e=>this.phones[e]===source));e&&this.phones.delete(e)}))}executeCall(e,t){const n=this.phones.get(t),s=Number(global.exports.authentication.getPlayerInfo(e,"phone"));if(n){const e=Number(global.exports.authentication.getPlayerInfo(n,"phone"));this.activeConversations.set(s,e),this.notifyPlayerIsBeingCalled(n,s)}}notifyPlayerIsBeingCalled(e,t){const n=Number(global.exports.authentication.getPlayerInfo(e,"phone")),s=Object.assign(Object.assign({},this.entities.find((e=>e.id===n))),{myNumber:n,isBeingCalledBy:t});TriggerClientEvent(`${GetCurrentResourceName()}:force-showui`,e,s)}answerCall(e,t){if(!this.activeConversations.has(t)||this.activeConversations.get(t)!==e)return void this.activeConversations.delete(t);const n=this.phones.get(e),s=this.phones.get(t);global.exports["pma-voice"].setPlayerCall(s,s),global.exports["pma-voice"].setPlayerCall(n,s),TriggerClientEvent(`${GetCurrentResourceName()}:called-picked-up`,s)}refuseCall(e,t){this.endCall(t);const n=this.phones.get(t);TriggerClientEvent(`${GetCurrentResourceName()}:call-ended`,n)}hangUp(e,t){this.endCall(e);const n=this.phones.get(t);TriggerClientEvent(`${GetCurrentResourceName()}:call-ended`,n)}fetchOnlinePlayersPhones(){global.exports.authentication.getAuthenticatedPlayers().forEach((e=>{this.phones.set(Number(global.exports.authentication.getPlayerInfo(e,"phone")),e)}))}endCall(e){if(this.activeConversations.has(e)){const t=this.phones.get(e),n=this.phones.get(this.activeConversations.get(e));global.exports["pma-voice"].setPlayerCall(n,0),global.exports["pma-voice"].setPlayerCall(t,0),this.activeConversations.delete(e)}}}("phone_contacts")})();