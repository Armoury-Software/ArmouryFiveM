(()=>{"use strict";const e={onPlayerDeath:"armoury:onPlayerDeath",onPlayerAuthenticate:"authentication:player-authenticated",onPlayerDisconnect:"playerDropped",onResourceStop:"onResourceStop",onContextMenuItemPressed:"armoury-overlay:context-menu-item-pressed",onPlayerEnterVehicle:"armoury:onPlayerEnterVehicle",onPlayerExitVehicle:"armoury:onPlayerExitVehicle",onPlayerClientsidedCacheLoaded:"armoury:player-resource-cache-loaded"};var t;!function(e){e[e.SERVER_TO_SERVER=0]="SERVER_TO_SERVER",e[e.SERVER_TO_CLIENT=1]="SERVER_TO_CLIENT",e[e.CLIENT_TO_SERVER=2]="CLIENT_TO_SERVER",e[e.CLIENT_TO_CLIENT=3]="CLIENT_TO_CLIENT"}(t||(t={}));const o=new Map,a=new Map,r=new Map;function n(){return function(e){return class extends e{constructor(...n){super(...n),o.has(e)&&o.get(e).forEach((([e,o,a])=>{a===t.CLIENT_TO_CLIENT?on(o,super[e].bind(this)):onNet(o,super[e].bind(this))})),a.has(e)&&a.get(e).forEach((e=>{exports(e,super[e].bind(this))})),r.has(e)&&r.get(e).forEach((([e,t])=>{RegisterCommand(e.toLowerCase(),((o,a,r)=>{Number(global.exports.authentication.getPlayerInfo(o,"adminLevel"))<t||super[e].call(this,o,a,r)}),!1)}))}}}}function i(a){return function(r,n,i){const s=e[n]||(null==a?void 0:a.eventName),l=(null==a?void 0:a.direction)||t.CLIENT_TO_SERVER;(null==s?void 0:s.length)?(o.has(r.constructor)||o.set(r.constructor,[]),o.get(r.constructor).some((([e,t,o])=>e===n))||o.get(r.constructor).push([n,s,l])):console.error(`${n} is not recognized as a default event, thus this listener won't work. Please use the eventName property inside the data parameter.`)}}function s(){return function(e,t,o){a.has(e.constructor)||a.set(e.constructor,[]),a.get(e.constructor).some((e=>e===t))||a.get(e.constructor).push(t)}}var l=function(e,t,o,a){var r,n=arguments.length,i=n<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,o):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,a);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(n<3?r(i):n>3?r(t,o,i):r(t,o))||i);return n>3&&i&&Object.defineProperty(t,o,i),i};let c=class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,o,a){RegisterCommand(e,((e,a,r)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||o(e,a,r)}),a)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{constructor(){super(...arguments),this._clientsidedResourceMap=new Map}get clientsidedResourceMap(){return this._clientsidedResourceMap}getPlayerClientsidedCacheKey(e,t){if(this._clientsidedResourceMap.has(e)){const o=this._clientsidedResourceMap.get(e);if(o[t])return o[t]}return null}updatePlayerClientsidedCacheKey(e,t,o){const a=this._clientsidedResourceMap.has(e)&&this._clientsidedResourceMap.get(e)||{};a[t]=o,this._clientsidedResourceMap.set(e,a),TriggerClientEvent("armoury-overlay:update-resource-metadata",e,GetCurrentResourceName(),t,o)}onPlayerClientsidedCacheLoaded(e){e[GetCurrentResourceName()]&&this._clientsidedResourceMap.set(source,e[GetCurrentResourceName()])}onPlayerDisconnect(){this._clientsidedResourceMap.has(source)&&this._clientsidedResourceMap.delete(source)}};l([i()],c.prototype,"onPlayerClientsidedCacheLoaded",null),l([i()],c.prototype,"onPlayerDisconnect",null),c=l([n()],c);const d=["k","M","G","T","P","E"],u=(e,t)=>{let o=e<0;if(e=Math.abs(e),Number.isNaN(e))return null;if(e<1e3)return e;const a=Math.floor(Math.log(e)/Math.log(1e3));return(o?"-":"")+(e/Math.pow(1e3,a)).toFixed(t)+d[a-1]};var h=function(e,t,o,a){var r,n=arguments.length,i=n<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,o):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,a);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(n<3?r(i):n>3?r(t,o,i):r(t,o))||i);return n>3&&i&&Object.defineProperty(t,o,i),i};let m=class extends c{constructor(){super(...arguments),this.cachedButtonsToAdd=new Map}onGeneralMenuOpened(e){global.exports["armoury-overlay"].showContextMenu(source,{title:"General Menu",id:"general-menu",items:[...this.cachedButtonsToAdd.has(source)?this.cachedButtonsToAdd.get(source):[],{label:"GPS",metadata:{buttonId:"gps"}},{label:"Legitimation",metadata:{buttonId:"legitimation"}},...e.length?[{label:"Vehicle",metadata:{buttonId:"vehicle"}}]:[]].map(((e,t)=>Object.assign(Object.assign({},e),{active:0===t})))})}onGeneralMenuItemPress(e,t,o,a){var r,n,i,s,l,c,d,u;switch(e){case"general-menu":switch(null===(r=null==t?void 0:t.metadata)||void 0===r?void 0:r.buttonId){case"vehicle":{const e=global.exports.armoury.getVehiclesStillNearbyFrom(source,a);global.exports["armoury-overlay"].showContextMenu(source,{title:"General Menu: Vehicle",id:"general-menu-vehicle",items:e.map(((e,t)=>({active:0===t,label:e[1],metadata:{vehicleNetworkId:e[0]}})))});break}case"taxi-driver":this.showTaxiDriverMenu(source,t.metadata.vehicleNetworkId)}break;case"taxi-menu":{if("stop-working"===t.metadata.buttonId)return void global.exports["factions-taxi"].stopPlayerDuty(source);const e=NetworkGetEntityFromNetworkId(t.metadata.vehicleNetworkId);if(DoesEntityExist(e)&&2===GetEntityType(e)&&GetPedInVehicleSeat(e,-1)===GetPlayerPed(source))switch(null===(n=null==t?void 0:t.metadata)||void 0===n?void 0:n.buttonId){case"start-working":global.exports["factions-taxi"].startPlayerDuty(source),this.showTaxiDriverMenu(source,t.metadata.vehicleNetworkId);break;case"start-taximeter":global.exports["factions-taxi"].startPlayerRide(source),this.showTaxiDriverMenu(source,t.metadata.vehicleNetworkId);break;case"stop-taximeter":global.exports["factions-taxi"].stopPlayerRide(source),this.showTaxiDriverMenu(source,t.metadata.vehicleNetworkId);break;case"adjust-fare":this.showTaxiDriverFareMenu(source,t.metadata.vehicleNetworkId)}else this.forceClose(source);break}case"taxi-menu-fare":{const e=NetworkGetEntityFromNetworkId(t.metadata.vehicleNetworkId);if(DoesEntityExist(e)&&2===GetEntityType(e)&&GetPedInVehicleSeat(e,-1)===GetPlayerPed(source)){switch(null===(i=null==t?void 0:t.metadata)||void 0===i?void 0:i.buttonId){case"raise-to-max":global.exports["factions-taxi"].setPlayerFare(source,global.exports["factions-taxi"].getMaxFare());break;case"raise-by-25":global.exports["factions-taxi"].setPlayerFare(source,1.25*global.exports["factions-taxi"].getPlayerFareCached(source));break;case"lower-by-25":global.exports["factions-taxi"].setPlayerFare(source,.75*global.exports["factions-taxi"].getPlayerFareCached(source));break;case"lower-to-min":global.exports["factions-taxi"].setPlayerFare(source,global.exports["factions-taxi"].getMinFare())}this.showTaxiDriverFareMenu(source,t.metadata.vehicleNetworkId)}else this.forceClose(source);break}case"general-menu-vehicle":if(!(null===(s=t.metadata)||void 0===s?void 0:s.vehicleNetworkId))return;global.exports.armoury.isVehicleNearbyPlayer(NetworkGetEntityFromNetworkId(null===(l=t.metadata)||void 0===l?void 0:l.vehicleNetworkId),source)&&global.exports["armoury-overlay"].showContextMenu(source,{title:"General Menu: Vehicle",id:"general-menu-vehicle-single",items:[{label:"Check trunk",active:!0,metadata:{id:"check-trunk"}},{label:"Open trunk",metadata:{id:"open-trunk"}},{label:"Close trunk",metadata:{id:"close-trunk"}}],metadata:{vehicleNetworkId:null===(c=t.metadata)||void 0===c?void 0:c.vehicleNetworkId}});case"general-menu-vehicle-single":if(!(null==o?void 0:o.vehicleNetworkId)||!(null===(d=t.metadata)||void 0===d?void 0:d.id))return;if(global.exports.armoury.isVehicleNearbyPlayer(NetworkGetEntityFromNetworkId(null==o?void 0:o.vehicleNetworkId),source))switch(null===(u=t.metadata)||void 0===u?void 0:u.id){case"check-trunk":emit("trunk:inspect-trunk",source,null==o?void 0:o.vehicleNetworkId);break;case"open-trunk":TriggerClientEvent("trunk:open-trunk",source,null==o?void 0:o.vehicleNetworkId);break;case"close-trunk":TriggerClientEvent("trunk:close-trunk",source,null==o?void 0:o.vehicleNetworkId)}}}showTaxiDriverFareMenu(e,t){const o=NetworkGetEntityFromNetworkId(t);if(DoesEntityExist(o)&&2===GetEntityType(o)&&GetPedInVehicleSeat(o,-1)===GetPlayerPed(e)){const t=global.exports["factions-taxi"].getPlayerFareCached(e),a=global.exports["factions-taxi"].getMaxFare(),r=global.exports["factions-taxi"].getMinFare();global.exports["armoury-overlay"].showContextMenu(e,{title:`Taxi Menu (Fare: $${u(global.exports["factions-taxi"].getPlayerFareCached(e))})`,id:"taxi-menu-fare",items:[...t<a?[{label:`Raise to max ($${a})`,metadata:{buttonId:"raise-to-max",vehicleNetworkId:NetworkGetNetworkIdFromEntity(o)}}]:[],...t<.75*a?[{label:`Raise by 25% ($${Math.floor(1.25*t)})`,metadata:{buttonId:"raise-by-25",vehicleNetworkId:NetworkGetNetworkIdFromEntity(o)}}]:[],...t>1.25*r?[{label:`Lower by 25% ($${Math.floor(.75*t)})`,metadata:{buttonId:"lower-by-25",vehicleNetworkId:NetworkGetNetworkIdFromEntity(o)}}]:[],...t>r?[{label:`Lower to min ($${r})`,metadata:{buttonId:"lower-to-min",vehicleNetworkId:NetworkGetNetworkIdFromEntity(o)}}]:[]].map(((e,t)=>Object.assign(Object.assign({},e),{active:0===t})))})}else this.forceClose(e)}showTaxiDriverMenu(e,t){const o=NetworkGetEntityFromNetworkId(t);if(DoesEntityExist(o)&&2===GetEntityType(o)&&GetPedInVehicleSeat(o,-1)===GetPlayerPed(e)){const o=global.exports["factions-taxi"].isPlayerOnDuty(e),a=global.exports["factions-taxi"].isPlayerBusyWithRide(e);global.exports["armoury-overlay"].showContextMenu(e,{title:`Taxi Menu (Fare: $${u(global.exports["factions-taxi"].getPlayerFareCached(e))})`,id:"taxi-menu",items:[...o?[]:[{label:"Start working",metadata:{buttonId:"start-working",vehicleNetworkId:t}}],...o?[{label:(a?"Stop":"Start")+" taximeter",metadata:{buttonId:(a?"stop":"start")+"-taximeter",vehicleNetworkId:t}}]:[],{label:"Adjust fare",metadata:{buttonId:"adjust-fare",vehicleNetworkId:t}},...o?[{label:"Stop working",metadata:{buttonId:"stop-working",vehicleNetworkId:t}}]:[]].map(((e,t)=>Object.assign(Object.assign({},e),{active:0===t})))})}else this.forceClose(e)}forceClose(e){global.exports["armoury-overlay"].hideContextMenu(e),TriggerClientEvent(`${GetCurrentResourceName()}:refresh-menu-toggle`,e,"general-menu")}addCachedButton(e,t){let o=this.cachedButtonsToAdd.has(e)?this.cachedButtonsToAdd.get(e):[];o=[...o.filter((e=>{var o,a;return(null===(o=null==e?void 0:e.metadata)||void 0===o?void 0:o.buttonId)!==(null===(a=null==t?void 0:t.metadata)||void 0===a?void 0:a.buttonId)})),t],this.cachedButtonsToAdd.set(e,o)}removeCachedButton(e,t){let o=this.cachedButtonsToAdd.has(e)?this.cachedButtonsToAdd.get(e):[];o=o.filter((e=>{var o;return(null===(o=null==e?void 0:e.metadata)||void 0===o?void 0:o.buttonId)!==t})),o.length?this.cachedButtonsToAdd.set(e,o):this.cachedButtonsToAdd.delete(e)}onPlayerDisconnect(){console.log("Attempting to delete cached buttons to add for player.."),this.cachedButtonsToAdd.has(source)&&this.cachedButtonsToAdd.delete(source)}};h([i({eventName:`${GetCurrentResourceName()}:open-general-menu`})],m.prototype,"onGeneralMenuOpened",null),h([i({eventName:`${GetCurrentResourceName()}:general-menu-item-press`})],m.prototype,"onGeneralMenuItemPress",null),h([s()],m.prototype,"addCachedButton",null),h([s()],m.prototype,"removeCachedButton",null),h([i()],m.prototype,"onPlayerDisconnect",null),m=h([n()],m),new m})();