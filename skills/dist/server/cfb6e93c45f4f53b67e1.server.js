(()=>{"use strict";new class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,s,l){RegisterCommand(e,((e,l,i)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||s(e,l,i)}),l)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this.assignExports(),this.registerCommands()}registerCommands(){RegisterCommand("skills",(()=>{let e=this.getPlayerSkills(source);global.exports.chat.addMessage(source,"------------------Skills List------------------");for(const t of e)global.exports.chat.addMessage(source,t.name+": "+t.value)}),!1)}updatePlayerSkill(e,t,s){const l=this.getPlayerSkills(e).map((e=>e.name===t?Object.assign(Object.assign({},e),{value:s}):Object.assign(Object.assign({},e),{value:e.value})));global.exports.authentication.setPlayerInfo(e,"skills",l,!1)}getPlayerSkills(e){return global.exports.authentication.getPlayerInfo(e,"skills")}getPlayerSkill(e,t){return this.getPlayerSkills(e).find((e=>e.name===t))}incrementPlayerSkill(e,t,s){const l=this.getPlayerSkill(e,t);this.updatePlayerSkill(e,t,Math.max(100,s+l.value))}decrementPlayerSkill(e,t,s){const l=this.getPlayerSkill(e,t);this.updatePlayerSkill(e,t,Math.max(0,s-l.value))}assignExports(){exports("getPlayerSkills",this.getPlayerSkills.bind(this)),exports("getPlayerSkill",this.getPlayerSkill.bind(this)),exports("incrementPlayerSkill",this.incrementPlayerSkill.bind(this)),exports("decrementPlayerSkill",this.decrementPlayerSkill.bind(this))}}})();