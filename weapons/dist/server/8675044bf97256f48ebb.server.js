(()=>{"use strict";new class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,s,o){RegisterCommand(e,((e,o,a)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||s(e,o,a)}),o)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this.assignExports()}givePlayerWeapon(e,t,s){const o=this.getPlayerWeapons(e);o[t]?o[t]=Object.assign(Object.assign({},o[t]),{ammo:s+o[t].ammo}):o[t]={ammo:s},global.exports.authentication.setPlayerInfo(e,"weapons",o),this.updatePedWeapons(e,t,s)}removePlayerWeapons(e){global.exports.authentication.setPlayerInfo(e,"weapons",{}),RemoveAllPedWeapons(GetPlayerPed(e),!0)}getPlayerWeapons(e){return"object"==typeof global.exports.authentication.getPlayerInfo(e,"weapons")?global.exports.authentication.getPlayerInfo(e,"weapons"):{}}updatePedWeapons(e,t,s){if(t)return void GiveWeaponToPed(GetPlayerPed(e),t,s,!1,!1);let o=this.getPlayerWeapons(e);RemoveAllPedWeapons(GetPlayerPed(e),!0);for(let t in o){const s=Number(t),a=o[s].ammo;GiveWeaponToPed(GetPlayerPed(e),s,a,!1,!1)}}assignExports(){exports("givePlayerWeapon",this.givePlayerWeapon.bind(this)),exports("removePlayerWeapons",this.removePlayerWeapons.bind(this)),exports("getPlayerWeapons",this.getPlayerWeapons.bind(this)),exports("updatePedWeapons",this.updatePedWeapons.bind(this))}}})();