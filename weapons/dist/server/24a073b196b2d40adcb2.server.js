(()=>{"use strict";new class extends class extends class extends class{constructor(){this.routingBucketCondition=(e,t)=>!0,this.assignServerBaseListeners()}RegisterAdminCommand(e,t,s,a){RegisterCommand(e,((e,a,o)=>{Number(global.exports.authentication.getPlayerInfo(e,"adminLevel"))<t||s(e,a,o)}),a)}assignServerBaseListeners(){onNet(`${GetCurrentResourceName()}:set-client-routing-bucket`,((e,t)=>{this.routingBucketCondition(e,t)&&SetEntityRoutingBucket(e,t)}))}}{removeClientsideVehicles(){TriggerClientEvent(`${GetCurrentResourceName()}:ARM_remove-vehicles`,-1)}}{}{constructor(){super(),this.assignExports(),this.assignListeners()}givePlayerWeapon(e,t,s){const a=this.getPlayerWeapons(e);a[t]?a[t]=Object.assign(Object.assign({},a[t]),{ammo:s+a[t].ammo}):a[t]={ammo:s},global.exports.authentication.setPlayerInfo(e,"weapons",a),this.updatePedWeapons(e,t,s)}removePlayerWeapons(e){global.exports.authentication.setPlayerInfo(e,"weapons",{}),RemoveAllPedWeapons(GetPlayerPed(e),!0)}getPlayerWeapons(e){return"object"==typeof global.exports.authentication.getPlayerInfo(e,"weapons")?global.exports.authentication.getPlayerInfo(e,"weapons"):{}}updatePedWeapons(e,t,s){if(t)return void GiveWeaponToPed(GetPlayerPed(e),t,s,!1,!1);const a=this.getPlayerWeapons(e);for(let t in a){const s=Number(t),o=a[s].ammo;GiveWeaponToPed(GetPlayerPed(e),s,o,!1,!1)}}assignExports(){exports("givePlayerWeapon",this.givePlayerWeapon.bind(this)),exports("removePlayerWeapons",this.removePlayerWeapons.bind(this)),exports("getPlayerWeapons",this.getPlayerWeapons.bind(this)),exports("updatePedWeapons",this.updatePedWeapons.bind(this))}assignListeners(){onNet("authentication:player-authenticated",(e=>{setTimeout((()=>{this.updatePedWeapons(e)}),1e3)})),onNet("armoury:onPlayerDeath",(()=>{this.removePlayerWeapons(source)}))}}})();